//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stanochki.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataBEntities : DbContext
    {
        public DataBEntities()
            : base("name=DataBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Entry> Entry { get; set; }
        public virtual DbSet<Offices> Offices { get; set; }
        public virtual DbSet<Prices> Prices { get; set; }
        public virtual DbSet<Requests> Requests { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Workwith> Workwith { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Insert_User(string login, string name, string surn, string middlen, string address, string pass, string number)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var surnParameter = surn != null ?
                new ObjectParameter("surn", surn) :
                new ObjectParameter("surn", typeof(string));
    
            var middlenParameter = middlen != null ?
                new ObjectParameter("middlen", middlen) :
                new ObjectParameter("middlen", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_User", loginParameter, nameParameter, surnParameter, middlenParameter, addressParameter, passParameter, numberParameter);
        }
    }
}
